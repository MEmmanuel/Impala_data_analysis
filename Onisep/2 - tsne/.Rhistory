require(dplyr)
require(data.table)
require(Rtsne)
require(readr)
require(tidyr)
require(ggplot2)
require(lintr)
require(plotly)
require(mice)
require(apcluster)
file.path = "~/PycharmProjects/ImpalaPoleEmploi2/Impala/Onisep/tsne"
setwd(file.path)
df = read.csv("table_onisep.csv", header=T)
df[is.na(df['Salaire.débutant']), 'Salaire.débutant'] = median(df[!is.na(df['Salaire.débutant']), 'Salaire.débutant'])
df_train <- df %>%
mutate(Salaire.débutant = jitter(Salaire.débutant))
df_train <- df %>%
mutate(Salaire.débutant = jitter(Salaire.débutant),
Salaire.débutant.norm = (Salaire.débutant - min(Salaire.débutant))/
(max(Salaire.débutant) - min(Salaire.débutant)),
diplome.norm = (Niveau.diplome - min(Niveau.diplome)) /
(max(Niveau.diplome) - min(Niveau.diplome))) %>%
select(-Salaire.débutant, -Code.Onisep, -Métier, -X, -Niveau.diplome) %>%
distinct(.)
df_train[is.na(df_train)] = 0
train_matrix = as.matrix(df_train)
#tsne_global
set.seed(seed)
tsne_global <- Rtsne(train_matrix, theta = 0.0)
results <- bind_cols(df, data.frame(tsne_global$Y))
plot_ly(results,
x = X1, y = X2, color = results$diplome.norm,
text = results$Métier, mode = "markers")
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE, q=0.1)
clusters = labels(apres, "enum")
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
set.seed(123)
tsne_global <- Rtsne(train_matrix, theta = 0.0)
results <- bind_cols(df, data.frame(tsne_global$Y))
plot_ly(results,
x = X1, y = X2, color = results$diplome.norm,
text = results$Métier, mode = "markers")
apres <- apcluster(s=apres@sim, q=0.1)
clusters = labels(apres, "enum")
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE, q=0.1)
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
set.seed(123)
tsne_global <- Rtsne(train_matrix, theta = 0.0)
results <- bind_cols(df, data.frame(tsne_global$Y))
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE, q=0.1)
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE)
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
set.seed(1)
tsne_global <- Rtsne(train_matrix, theta = 0.0)
results <- bind_cols(df, data.frame(tsne_global$Y))
plot_ly(results,
x = X1, y = X2, color = results$diplome.norm,
text = results$Métier, mode = "markers")
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE)
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
clusters = labels(apres, "enum")
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE, q=0.1)
clusters = labels(apres, "enum")
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
set.seed(5649)
tsne_global <- Rtsne(train_matrix, theta = 0.0)
results <- bind_cols(df, data.frame(tsne_global$Y))
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE, q=0.1)
clusters = labels(apres, "enum")
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
set.seed(47)
tsne_global <- Rtsne(train_matrix, theta = 0.0)
results <- bind_cols(df, data.frame(tsne_global$Y))
plot_ly(results,
x = X1, y = X2, color = results$diplome.norm,
text = results$Métier, mode = "markers")
write.csv(df_train, 'data/output/results_tsne_ap_clusters.csv',
row.names = F,
fileEncoding = 'UTF-8')
write.csv(df_train, 'df_onisep.csv',
row.names = F,
fileEncoding = 'UTF-8')
