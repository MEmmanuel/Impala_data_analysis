require(dplyr)
require(data.table)
require(Rtsne)
require(readr)
require(tidyr)
require(ggplot2)
require(lintr)
require(plotly)
require(mice)
require(apcluster)
file.path = "~/PycharmProjects/ImpalaPoleEmploi2/Impala/Onisep/tsne"
setwd(file.path)
df = read.csv("table_onisep.csv", header=T)
df[is.na(df['Salaire.débutant']), 'Salaire.débutant'] = median(df[!is.na(df['Salaire.débutant']), 'Salaire.débutant'])
df_train <- df %>%
mutate(Salaire.débutant = jitter(Salaire.débutant))
df_train <- df %>%
mutate(Salaire.débutant = jitter(Salaire.débutant),
Salaire.débutant.norm = (Salaire.débutant - min(Salaire.débutant))/
(max(Salaire.débutant) - min(Salaire.débutant)),
diplome.norm = (Niveau.diplome - min(Niveau.diplome)) /
(max(Niveau.diplome) - min(Niveau.diplome))) %>%
select(-Salaire.débutant, -Code.Onisep, -Métier, -X, -Niveau.diplome) %>%
distinct(.)
df_train[is.na(df_train)] = 0
train_matrix = as.matrix(df_train)
#tsne_global
set.seed(seed)
tsne_global <- Rtsne(train_matrix, theta = 0.0)
results <- bind_cols(df, data.frame(tsne_global$Y))
plot_ly(results,
x = X1, y = X2, color = results$diplome.norm,
text = results$Métier, mode = "markers")
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE, q=0.1)
clusters = labels(apres, "enum")
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
set.seed(123)
tsne_global <- Rtsne(train_matrix, theta = 0.0)
results <- bind_cols(df, data.frame(tsne_global$Y))
plot_ly(results,
x = X1, y = X2, color = results$diplome.norm,
text = results$Métier, mode = "markers")
apres <- apcluster(s=apres@sim, q=0.1)
clusters = labels(apres, "enum")
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE, q=0.1)
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
set.seed(123)
tsne_global <- Rtsne(train_matrix, theta = 0.0)
results <- bind_cols(df, data.frame(tsne_global$Y))
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE, q=0.1)
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE)
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
set.seed(1)
tsne_global <- Rtsne(train_matrix, theta = 0.0)
results <- bind_cols(df, data.frame(tsne_global$Y))
plot_ly(results,
x = X1, y = X2, color = results$diplome.norm,
text = results$Métier, mode = "markers")
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE)
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
clusters = labels(apres, "enum")
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE, q=0.1)
clusters = labels(apres, "enum")
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
set.seed(5649)
tsne_global <- Rtsne(train_matrix, theta = 0.0)
results <- bind_cols(df, data.frame(tsne_global$Y))
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE, q=0.1)
clusters = labels(apres, "enum")
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
set.seed(47)
tsne_global <- Rtsne(train_matrix, theta = 0.0)
results <- bind_cols(df, data.frame(tsne_global$Y))
plot_ly(results,
x = X1, y = X2, color = results$diplome.norm,
text = results$Métier, mode = "markers")
write.csv(df_train, 'data/output/results_tsne_ap_clusters.csv',
row.names = F,
fileEncoding = 'UTF-8')
write.csv(df_train, 'df_onisep.csv',
row.names = F,
fileEncoding = 'UTF-8')
file.path = "~/PycharmProjects/ImpalaPoleEmploi2/Impala/Onisep/tsne"
setwd(file.path)
df = read.csv("table_onisep.csv", header=T)
df[is.na(df['Salaire.débutant']), 'Salaire.débutant'] =
median(df[!is.na(df['Salaire.débutant']), 'Salaire.débutant'])
getwd()
file.path = getwd()
setwd(file.path)
df = read.csv("table_onisep.csv", header=T)
df[is.na(df['Salaire.débutant']), 'Salaire.débutant'] =
median(df[!is.na(df['Salaire.débutant']), 'Salaire.débutant'])
# Plusieurs vecteurs métiers sont identiques. Pour les distinguer un peu,
# on ajoute du bruit dans les salaires
df_train <- df %>%
mutate(Salaire.débutant = jitter(Salaire.débutant))
# Normalisation (entre 0 et 1) des salaires débutants
# et suppression des variables inutiles pour le calcul des coordonnées
df_train <- df %>%
mutate(Salaire.débutant = jitter(Salaire.débutant),
Salaire.débutant.norm = (Salaire.débutant - min(Salaire.débutant))/
(max(Salaire.débutant) - min(Salaire.débutant)),
diplome.norm = (Niveau.diplome - min(Niveau.diplome)) /
(max(Niveau.diplome) - min(Niveau.diplome))) %>%
select(-Salaire.débutant, -Code.Onisep, -Métier, -X, -Niveau.diplome) %>%
distinct(.)
# Matrice des données
#df_train[is.na(df_train)] = 0
train_matrix = as.matrix(df_train)
#tsne_global
# Pour changer l'aspect de la carto : on peut faire varier le seed et la perplexité
set.seed(47)
tsne_global <- Rtsne(train_matrix, perplexity = 30, theta = 0.0)
results <- bind_cols(df, data.frame(tsne_global$Y))
plot_ly(results,
x = X1, y = X2, color = results$diplome.norm,
text = results$Métier, mode = "markers")
# affinity propagation
require(dplyr)
require(data.table)
require(Rtsne)
require(readr)
require(tidyr)
require(ggplot2)
require(lintr)
require(plotly)
require(mice)
df[is.na(df['Salaire.débutant']), 'Salaire.débutant'] =
median(df[!is.na(df['Salaire.débutant']), 'Salaire.débutant'])
# Plusieurs vecteurs métiers sont identiques. Pour les distinguer un peu,
# on ajoute du bruit dans les salaires
df_train <- df %>%
mutate(Salaire.débutant = jitter(Salaire.débutant))
# Normalisation (entre 0 et 1) des salaires débutants
# et suppression des variables inutiles pour le calcul des coordonnées
df_train <- df %>%
mutate(Salaire.débutant = jitter(Salaire.débutant),
Salaire.débutant.norm = (Salaire.débutant - min(Salaire.débutant))/
(max(Salaire.débutant) - min(Salaire.débutant)),
diplome.norm = (Niveau.diplome - min(Niveau.diplome)) /
(max(Niveau.diplome) - min(Niveau.diplome))) %>%
select(-Salaire.débutant, -Code.Onisep, -Métier, -X, -Niveau.diplome) %>%
distinct(.)
# Matrice des données
#df_train[is.na(df_train)] = 0
train_matrix = as.matrix(df_train)
#tsne_global
# Pour changer l'aspect de la carto : on peut faire varier le seed et la perplexité
set.seed(47)
tsne_global <- Rtsne(train_matrix, perplexity = 30, theta = 0.0)
results <- bind_cols(df, data.frame(tsne_global$Y))
plot_ly(results,
x = X1, y = X2, color = results$diplome.norm,
text = results$Métier, mode = "markers")
# affinity propagation
# Pour changer le nombre de clusters : faire varier q entre 0 et 1
# (q=1 --> chaque point est un cluster)
# (q=0 --> tous les points sont dans le même cluster)
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE, q=0.1)
clusters = labels(apres, "enum")
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
df_train[is.na(df_train)] = 0
train_matrix = as.matrix(df_train)
set.seed(47)
tsne_global <- Rtsne(train_matrix, perplexity = 30, theta = 0.0)
results <- bind_cols(df, data.frame(tsne_global$Y))
plot_ly(results,
x = X1, y = X2, color = results$diplome.norm,
text = results$Métier, mode = "markers")
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE, q=0.1)
clusters = labels(apres, "enum")
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
require(apcluster)
apres <- apcluster(negDistMat(r=2), tsne_global$Y, details=TRUE, q=0.1)
clusters = labels(apres, "enum")
plot_ly(results,
x = X1, y = X2, color = as.factor(clusters),
text = results$Métier, mode = "markers")
results2 <- bind_cols(df, clusters)
results2 <- bind_cols(results, clusters)
results2 <- bind_cols(results, as.data.frame(clusters))
df = read.csv("table_onisep.csv", header=T)
df[is.na(df['Salaire.débutant']), 'Salaire.débutant'] =
median(df[!is.na(df['Salaire.débutant']), 'Salaire.débutant'])
df_train <- df %>%
mutate(Salaire.débutant = jitter(Salaire.débutant))
df_train <- df %>%
mutate(Salaire.débutant = jitter(Salaire.débutant),
Salaire.débutant.norm = (Salaire.débutant - min(Salaire.débutant))/
(max(Salaire.débutant) - min(Salaire.débutant)),
diplome.norm = (Niveau.diplome - min(Niveau.diplome)) /
(max(Niveau.diplome) - min(Niveau.diplome))) %>%
select(-Salaire.débutant, -Code.Onisep, -Métier, -X, -Niveau.diplome) %>%
distinct(.)
len(is.na(df_train))
length(is.na(df_train))
View(df_train)
View(df_train)
which(is.na(df_train))
df_train[19127]
which.col(is.na(df_train))
which.max(is.na(df_train))
which.min(is.na(df_train))
View(train_matrix)
